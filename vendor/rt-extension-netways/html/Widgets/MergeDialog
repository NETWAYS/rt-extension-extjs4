<div id="mergeConfirmation" class="modal">
	<p>
		You're about to merge ticket:<br>
		<br>
		<span class="mergeSource">
			<% $m->comp('/Elements/RT-Extension-TitleTag:createFromTicket', Ticket => $Ticket) %> (<% $Ticket->Status %>)
		</span><br>
		<br>
		into:<br>
		<br>
		<span class="mergeTarget"></span><br>
		<br>
		Are you sure you want to proceed?
	</p>
	<button rel="modal:close">Perform merge</button>
	<a rel="modal:close" class="button">No, I changed my mind</a>
</div>

<div id="mergeFailure" class="modal">
	<p>
		<span class="mergeReason"></span>
	</p>
	<a rel="modal:close" class="button">Close</a>
</div>

<script type="text/javascript">
	const rtName = '<% RT->Config->Get('rtname') %>';
	const ticketDetailsPattern = /id: ticket\/(\d+)\s+Subject: (.*)$\s+Status: (.*)$/m;
	const ticketErrorPattern = /# (.*)$/m;

	var $ = jQuery;  // Don't know why that's not the damn default..

	$(document).on('ready', function() {
		var $mergeInput = $('input[name="<% $Ticket->Id %>-MergeInto"]');
		if (! $mergeInput.length) {
			return;
		}

		$mergeInput.closest('form').on('submit', function (event) {
			var $mergeConfirmation = $('#mergeConfirmation');
			if ($mergeConfirmation.is(':visible')) {  // RT's version of jQuery Modal has no isActive() :(
				$.modal.close();
				this.submit();  // Shouldn't be necessary but is. It's as if the browser remembers that we called preventDefault forever until a reload -.-
			} else if ($mergeInput.val()) {
				event.preventDefault();

				var targetId = $mergeInput.val();
				var $form = $(this);

				$('input[name="SubmitTicket"]', $form).prop('disabled', true);
				$.ajax({
					url: '<% RT->Config->Get('WebURL') %>/REST/1.0/ticket/' + targetId + '/show?format=l&fields=Subject,Status',
					complete: function (req, textStatus) {
						$('input[name="SubmitTicket"]', $form).prop('disabled', false);
					},
					// No error handler because RT seems not to return any real HTTP errors...
					success: function (data, textStatus, req) {
						var matches = data.match(ticketDetailsPattern);
						if (matches) {
							// Does not re-use targetId because the target may have already been merged into something else
							$('.mergeTarget', $mergeConfirmation).html(
								'[' + rtName + ' #' + matches[1] + ']: ' + matches[2] + ' (' + matches[3] + ')'
							);
							$mergeConfirmation.modal({
								closeText: '?'
							});
						} else {
							var errors = data.match(ticketErrorPattern);
							if (errors) {
								var $mergeFailure = $('#mergeFailure');
								$('.mergeReason', $mergeFailure).html(errors[1]);
								$mergeFailure.modal({
									closeText: '!'
								});
							} else {
								console.error('Failed to parse result data:\n', data);
								alert("That didn't quite work. Please contact an administrator.");
							}
						}
					}
				});
			}
		});
	});
</script>

<%init>
	my $Ticket = LoadTicket($id);
</%init>
<%args>
	$id
</%args>
