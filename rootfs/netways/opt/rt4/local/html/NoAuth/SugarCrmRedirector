<%init>
    unless ($session{CurrentUser}->Id) {
        user_error('No valid login session');
    }

    my $sugar_user = RT->Config->Get('NETWAYS_SugarCrm_User');
    my $sugar_pass = RT->Config->Get('NETWAYS_SugarCrm_Pass');
    my $sugar_base = RT->Config->Get('NETWAYS_SugarCrm_Base');

    my $sugar_account_base = $sugar_base
        . '/index.php'
        . '?module=Accounts&action=DetailView&record=';

    unless ($sugar_user && $sugar_pass && $sugar_base) {
        user_error('Configuration error. Please set $NETWAYS_SugarCrm_User, $NETWAYS_SugarCrm_Pass, $NETWAYS_SugarCrm_Base');
    }

    unless ($globalId) {
        user_error('Parameter "globalId=&lt;int&gt;" is missing!');
    }

    my $cache = Cache::FileCache->new({
        'namespace' => 'rt4_sugarcrm_globalid',
        'default_expires_in' => 86400
    });

    my $account_id = $cache->get($globalId);

    unless ($account_id) {
        my $cookie_jar = HTTP::Cookies->new();
        my $soap = SOAP::Lite->new()->on_action(sub {
            no warnings;
            join '/', @_
        })
            ->service($sugar_base . '/soap.php?wsdl')
            ->proxy($sugar_base . '/soap.php', cookie_jar => $cookie_jar);

        my $login = $soap->call(
            SOAP::Data->name('login'),
            SOAP::Data->name('user_auth')->value({
                'user_name' => $sugar_user,
                'password'  => $sugar_pass
            }),
            SOAP::Data->name('application_name')->value('rt4netways'),
            SOAP::Data->name('URI')
        );

        assert_soap_error($login);

        my $login_id = $login->result()->{id};

        my $account = $soap->call(
            SOAP::Data->name('get_entry_list'),
            SOAP::Data->name('session')->value($login_id),
            SOAP::Data->name('module_name')->value('Accounts'),

            SOAP::Data->name('query')->value("accounts_cstm.net_global_id_c='$globalId'"),
            SOAP::Data->name('order_by')->value('accounts.name ASC'),
            SOAP::Data->name('offset')->value(0),
            SOAP::Data->name('select_fields')->value([ 'net_global_id_c', 'shortname_c', 'name', 'id' ]),

            SOAP::Data->name('max_results')->value(1),
            SOAP::Data->name('deleted')->value(0)
        );

        assert_soap_error($account);
        assert_soap_result($account);

        my $account_entry = sugar_result_hash($account, 1);
        $account_id = $account_entry->{id};

        $cache->set($globalId, $account_id);
    }

    if ($account_id) {
        $m->redirect($sugar_account_base . $account_id);
    }

    user_error('General error. Could not redirect');
</%init>
<%once>
    use HTTP::Cookies;
    use SOAP::Lite;
    use warnings;
    use Cache::FileCache;

    sub assert_soap_error {
        my $som = shift;
        user_error('SOAP Error') if ($som->fault());
        my $error = $som->result()->{error};
        if ($error->{number} > 0) {
            user_error('SugarCRM SOAP Login Error: ' . $error->{description});
        }
    }

    sub assert_soap_result {
        my $som = shift;
        unless ($som->result()->{result_count} > 0) {
            user_error('No results found for globalId');
        }
    }

    sub sugar_result_hash {
        my $som = shift;
        my $first = shift // 0;

        unless ($som->result()->{'result_count'} > 0) {
            return undef;
        }

        my @data = ();
        for my $entry (@{ $som->result()->{'entry_list'} }) {
            push @data, { map {$_->{'name'} => $_->{'value'}} @{ $entry->{'name_value_list'} } };
            if ($first) {
                return $data[0];
            }
        }
        return \@data;
    }

    sub user_error {
        my $error = shift;
        my $title = shift || 'Error';
        $m->out(qq{
        <!doctype html>
<html>
  <head>
    <meta charset="utf-8">
    <title>SugarCrm Redirect: $title</title>
    <style type="text/css">
        html * {
         font-family: Arial, sans-serif;
         font-size: 18px;
        }
    </style>
  </head>
  <body>
    <h4>SugarCrm Redirect: $title</h4>
    <p>$error</p>
  </body>
</html>
        });
        $m->abort();
    }
</%once>
<%args>
    $globalId => undef;
</%args>